// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    // a if sel = 000
    // b if sel = 001
    // c if sel = 010
    // d if sel = 011
    // e if sel = 100
    // f if sel = 101
    // g if sel = 110
    // h if sel = 111

    // if sel[2] = 1 then in = in otherwise 0 bc in should go to a,b,c,d
    PARTS:
    Not(in= sel[2], out= Notsel);
    And(a= in, b= sel[2], out= inEFGH); // if sel[2] = 1 then in = in otherwise 0 bc in should go to a,b,c,d
    And(a= in, b= Notsel, out= inABCD); // if sel[2] = 0 (Not(sel[1]) = 1) then in = in otherwise 0 bc in should go to e,f,g,h
    
    DMux4Way(in= inABCD, sel= sel[0..1], a= a, b= b, c= c, d= d);
    DMux4Way(in= inEFGH, sel= sel[0..1], a= e, b= f, c= g, d= h);

    
}